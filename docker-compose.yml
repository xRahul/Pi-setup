services:


  tailscale:
    image: tailscale/tailscale:v1.84.3
    container_name: tailscale
    restart: unless-stopped
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTH_KEY} // can be commented out after 1st run
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_HOSTNAME=pi-docker-ts
      - TS_ROUTES=10.8.1.0/24
      - TS_EXTRA_ARGS=${TS_EXTRA_ARGS}
    volumes:
      - ${TAILSCALE_PATH}:/var/lib/tailscale
      # - ${TAILSCALE_TMP_PATH}:/tmp
    devices:
      - /dev/net/tun:/dev/net/tun
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
      - net.ipv4.conf.all.src_valid_mark=1
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    networks:
      wg-easy:
        ipv4_address: 10.8.1.48



  pihole:
    image: pihole/pihole:2025.06.2
    container_name: pihole
    hostname: pihole
    restart: unless-stopped
    environment:
      - FTLCONF_webserver_api_password=${PIHOLE__WEBPASSWORD}
      - FTLCONF_dns_hosts=${PIHOLE_LOCAL_DNS}
      - TZ=${DEFAULT_TZ}
      - FTLCONF_dns_upstreams=10.8.1.4#5053
    volumes:
      - ${PIHOLE_ETC_PATH}:/etc/pihole
      - ${PIHOLE_ETC_DNSMASQ_PATH}:/etc/dnsmasq.d
    # ports:
      # - "53:53/tcp"
      # - "53:53/udp"
      # - "5353:80/tcp"
    networks:
      wg-easy:
        ipv4_address: 10.8.1.3





  cloudflared-dns:
    image: cloudflare/cloudflared:2025.6.1
    container_name: cloudflared-dns-tunnel
    hostname: cloudflareddnstunnel
    user: 1000:1000 # should be owner of volumes
    restart: unless-stopped
    command: proxy-dns
    environment:
      TUNNEL_DNS_UPSTREAM: "https://1.0.0.1/dns-query,https://1.1.1.1/dns-query"
      # Listen on an unprivileged port
      TUNNEL_DNS_PORT: 5053
      # Listen on all interfaces
      TUNNEL_DNS_ADDRESS: "0.0.0.0"
      # Tunnel metrics
      TUNNEL_METRICS: 10.8.1.4:43697
    volumes:
      - ${CLOUDFALRED_DNS_PATH}:/etc/cloudflared
    # ports:
      # - "43697:43697/tcp"
    networks:
      wg-easy:
        ipv4_address: 10.8.1.4



  caddy:
    image: ghcr.io/caddybuilds/caddy-cloudflare:2.10
    container_name: caddy
    network_mode: service:tailscale
    user: 1000:1000 # should be owner of volumes
    restart: unless-stopped
    depends_on:
      - tailscale
    cap_add:
      - NET_ADMIN
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
    # ports:
    #   - "80:80"
    #   - "443:443"
    #   - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ${CADDY_SITE_PATH}:/srv
      - ${CADDY_DATA_PATH}:/data
      - ${CADDY_CONFIG_PATH}:/config
      # - ${TAILSCALE_TMP_PATH}/tailscaled.sock:/var/run/tailscale/tailscaled.sock
    # networks:
    #   wg-easy:
    #     ipv4_address: 10.8.1.5
    
 
 

  web-test:
    image: traefik/whoami:latest
    container_name: web-test
    restart: unless-stopped
    networks:
      wg-easy:
        ipv4_address: 10.8.1.49




  immich-server:
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    container_name: immich_server
    hostname: immichserver
    user: 1000:1000 # should be owner of volumes
    restart: unless-stopped
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - ${IMMICH_MEDIA_LOCATION}:/mnt/media/backup:ro
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - ./.immich_env
    # ports:
    #   - '2283:2283'
    depends_on:
      - immich_redis
      - immich_database
    healthcheck:
      disable: false
    networks:
      wg-easy:
        ipv4_address: 10.8.1.6




  immich-machine-learning:
    container_name: immich_machine_learning
    hostname: immichmachinelearning
    restart: unless-stopped
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - ${IMMICH_ML_MODEL_CACHE_LOCATION}:/cache
    env_file:
      - ./.immich_env
    healthcheck:
      disable: false
    networks:
      wg-easy:
        ipv4_address: 10.8.1.8

  immich_redis:
    image: docker.io/valkey/valkey:8-bookworm@sha256:fec42f399876eb6faf9e008570597741c87ff7662a54185593e74b09ce83d177
    container_name: immich_redis
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping || exit 1
    hostname: redis
    env_file:
      - ./.immich_env
    volumes:
      - ${IMMICH_REDIS_DATA_PATH}:/data
    networks:
      wg-easy:
        ipv4_address: 10.8.1.9



  immich_database:
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0
    container_name: immich_postgres
    restart: unless-stopped
    hostname: database
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      # Uncomment the DB_STORAGE_TYPE: 'HDD' var if your database isn't stored on SSDs
      # DB_STORAGE_TYPE: 'HDD'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    env_file:
      - ./.immich_env
    networks:
      wg-easy:
        ipv4_address: 10.8.1.10



# Booked 10.8.1.2 - 10.8.1.50

networks:
  wg-easy:
    driver: bridge
    ipam:
      config:
        - subnet: 10.8.1.0/24
