services:


  tailscale:
    image: tailscale/tailscale:v1.86.2
    container_name: tailscale
    restart: unless-stopped
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTH_KEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_HOSTNAME=pi-docker-ts
      - TS_ROUTES=10.8.1.0/24
      - TS_EXTRA_ARGS=${TS_EXTRA_ARGS}
    volumes:
      - ${TAILSCALE_PATH}:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
      - net.ipv4.conf.all.src_valid_mark=1
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    networks:
      wg-easy:
        ipv4_address: 10.8.1.48



  pihole:
    image: pihole/pihole:2025.08.0
    container_name: pihole
    hostname: pihole
    restart: unless-stopped
    environment:
      - FTLCONF_webserver_api_password=${PIHOLE__WEBPASSWORD}
      - FTLCONF_dns_hosts=${PIHOLE_LOCAL_DNS}
      - TZ=${DEFAULT_TZ}
      - FTLCONF_dns_upstreams=10.8.1.4#5053
    volumes:
      - ${PIHOLE_ETC_PATH}:/etc/pihole
      - ${PIHOLE_ETC_DNSMASQ_PATH}:/etc/dnsmasq.d
    # ports:
      # - "53:53/tcp"
      # - "53:53/udp"
      # - "5353:80/tcp"
    networks:
      wg-easy:
        ipv4_address: 10.8.1.3





  cloudflared-dns:
    image: cloudflare/cloudflared:2025.6.1
    container_name: cloudflared-dns-tunnel
    hostname: cloudflareddnstunnel
    user: 1000:1000 # should be owner of volumes
    restart: unless-stopped
    command: proxy-dns
    environment:
      TUNNEL_DNS_UPSTREAM: "https://1.0.0.1/dns-query,https://1.1.1.1/dns-query"
      # Listen on an unprivileged port
      TUNNEL_DNS_PORT: 5053
      # Listen on all interfaces
      TUNNEL_DNS_ADDRESS: "0.0.0.0"
      # Tunnel metrics
      TUNNEL_METRICS: 10.8.1.4:43697
    volumes:
      - ${CLOUDFALRED_DNS_PATH}:/etc/cloudflared
    # ports:
      # - "43697:43697/tcp"
    networks:
      wg-easy:
        ipv4_address: 10.8.1.4



  caddy:
    image: ghcr.io/caddybuilds/caddy-cloudflare:2.10
    container_name: caddy
    network_mode: service:tailscale
    user: 1000:1000 # should be owner of volumes
    restart: unless-stopped
    depends_on:
      - tailscale
    cap_add:
      - NET_ADMIN
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
    # ports:
    #   - "80:80"
    #   - "443:443"
    #   - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ${CADDY_SITE_PATH}:/srv
      - ${CADDY_DATA_PATH}:/data
      - ${CADDY_CONFIG_PATH}:/config
      # - ${TAILSCALE_TMP_PATH}/tailscaled.sock:/var/run/tailscale/tailscaled.sock
    # networks:
    #   wg-easy:
    #     ipv4_address: 10.8.1.5
    
 
 

  web-test:
    image: traefik/whoami:latest
    container_name: web-test
    restart: unless-stopped
    networks:
      wg-easy:
        ipv4_address: 10.8.1.49


  redis:
    image: redis:8.2.0
    container_name: redis
    # volumes:
    #   - ${REDDIS_DATA_PATH}:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 20s
      timeout: 3s
    networks:
      wg-easy:
        ipv4_address: 10.8.1.52


  paperless-ngx:
    image: ghcr.io/paperless-ngx/paperless-ngx:2.17.1
    container_name: paperless-ngx
    restart: unless-stopped
    depends_on:
      - redis
    # ports:
    #   - "8000:8000"
    volumes:
      - ${PAPERLESS_NGX_DATA_PATH}:/usr/src/paperless/data
      - ${PAPERLESS_NGX_MEDIA_PATH}:/usr/src/paperless/media
      - ${PAPERLESS_NGX_EXPORT_PATH}:/usr/src/paperless/export
      - ${PAPERLESS_NGX_CONSUME_PATH}:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: redis://redis:6379
      PAPERLESS_TIME_ZONE: ${DEFAULT_TZ}
      PAPERLESS_URL: ${PAPERLESS_NGX_URL}
      PAPERLESS_SECRET_KEY: ${PAPERLESS_NGX_SECRET_KEY}
    dns:
      - 10.8.1.3
      - 1.1.1.1
      - 8.8.8.8
    networks:
      wg-easy:
        ipv4_address: 10.8.1.32


  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: unless-stopped
    # ports:
    #   - 5678:5678
    dns:
      - 10.8.1.3
      - 1.1.1.1
      - 8.8.8.8
    environment:
      - N8N_HOST=n8n.pi.rahulja.in
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://n8n.pi.rahulja.in/
      - GENERIC_TIMEZONE=${DEFAULT_TZ}
    volumes:
      - ${N8N_DATA_FOLDER}:/home/node/.n8n
      - ${N8N_LOCAL_FILES_FOLDER}/local_files:/files
    networks:
      wg-easy:
        ipv4_address: 10.8.1.53



  filebrowser:
    image: filebrowser/filebrowser:v2.42.3
    container_name: filebrowser
    volumes:
      - ${FILEBROWSER_ROOT_PATH}:/srv
      - ${FILEBROWSER_DB_FILE_PATH}:/database
      - ${FILEBROWSER_CONFIG_SETTING_FILE_PATH}:/config
    environment:
      - PUID=1000
      - PGID=1000
    # ports:
    #   - 8080:80
    restart: unless-stopped
    dns:
      - 10.8.1.3
      - 1.1.1.1
      - 8.8.8.8
    networks:
      wg-easy:
        ipv4_address: 10.8.1.34



  transmission:
    image: linuxserver/transmission:4.0.6
    container_name: transmission
    restart: unless-stopped
    # network_mode: "service:gluetun"
    volumes:
      - ${TRANSMISSION_CONFIG_SOURCE}:/config
      - ${TRANSMISSION_DOWNLOAD_SOURCE}:/downloads
      - ${TRANSMISSION_WATCH_SOURCE}:/watch
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=${DEFAULT_TZ}
      # - DOCKER_MODS=linuxserver/mods:transmission-floodui
      # - DOCKER_MODS=linuxserver/mods:transmission-transmissionic
      - USER=${TRANSMISSION_USERNAME}
      - PASS=${TRANSMISSION_PASSWORD}
    dns:
      - 10.8.1.3
      - 1.1.1.1
      - 8.8.8.8
    networks:
      wg-easy:
        ipv4_address: 10.8.1.23



  homarr:
    image: ghcr.io/homarr-labs/homarr:v1.33.0
    container_name: homarr
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
      - ${HOMARR_APP_DATA_PATH}:/appdata
    environment:
      - SECRET_ENCRYPTION_KEY=${HOMARR_SECRET_ENCRYPTION_KEY}
    # ports:
    #   - '7575:7575'
    restart: unless-stopped
    dns:
      - 10.8.1.3
      - 1.1.1.1
      - 8.8.8.8
    networks:
      wg-easy:
        ipv4_address: 10.8.1.35

# Booked 10.8.1.2 - 10.8.1.53 # remember to add to .env of local dns pihole

networks:
  wg-easy:
    driver: bridge
    ipam:
      config:
        - subnet: 10.8.1.0/24
