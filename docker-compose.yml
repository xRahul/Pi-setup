services:


  tailscale:
    image: tailscale/tailscale:v1.84.3
    container_name: tailscale
    restart: unless-stopped
    network_mode: host
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTH_KEY} // can be commented out after 1st run
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_HOSTNAME=pi-docker-ts
      - TS_ROUTES=10.8.1.0/24
      - TS_EXTRA_ARGS=${TS_EXTRA_ARGS}
    volumes:
      - ${TAILSCALE_PATH}:/var/lib/tailscale
      - ${TAILSCALE_TMP_PATH}:/tmp
    devices:
      - /dev/net/tun:/dev/net/tun
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
      - net.ipv4.conf.all.src_valid_mark=1
    cap_add:
      - NET_ADMIN
      # - SYS_MODULE
    # networks:
    #   wg-easy:
    #     ipv4_address: 10.8.1.48



  pihole:
    image: pihole/pihole:2025.06.2
    container_name: pihole
    hostname: pihole
    restart: unless-stopped
    environment:
      - FTLCONF_webserver_api_password=${PIHOLE__WEBPASSWORD}
      - TZ=${DEFAULT_TZ}
    volumes:
      - ${PIHOLE_ETC_PATH}:/etc/pihole
      - ${PIHOLE_ETC_DNSMASQ_PATH}:/etc/dnsmasq.d
    # ports:
      # - "53:53/tcp"
      # - "53:53/udp"
      # - "5353:80/tcp"
    networks:
      wg-easy:
        ipv4_address: 10.8.1.3





  cloudflared-dns:
    image: cloudflare/cloudflared:2025.6.1
    container_name: cloudflared-dns-tunnel
    hostname: cloudflareddnstunnel
    user: 1000:1000 # should be owner of volumes
    restart: unless-stopped
    command: proxy-dns
    environment:
      TUNNEL_DNS_UPSTREAM: "https://1.0.0.1/dns-query,https://1.1.1.1/dns-query"
      # Listen on an unprivileged port
      TUNNEL_DNS_PORT: 5053
      # Listen on all interfaces
      TUNNEL_DNS_ADDRESS: "0.0.0.0"
      # Tunnel metrics
      TUNNEL_METRICS: 10.8.1.4:43697
    volumes:
      - ${CLOUDFALRED_DNS_PATH}:/etc/cloudflared
    # ports:
      # - "43697:43697/tcp"
    networks:
      wg-easy:
        ipv4_address: 10.8.1.4



  caddy:
    image: ghcr.io/caddybuilds/caddy-cloudflare:2.10
    container_name: caddy
    hostname: caddy
    user: 1000:1000 # should be owner of volumes
    restart: unless-stopped
    depends_on:
      - tailscale
    cap_add:
      - NET_ADMIN
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ${CADDY_SITE_PATH}:/srv
      - ${CADDY_DATA_PATH}:/data
      - ${CADDY_CONFIG_PATH}:/config
      - ${TAILSCALE_TMP_PATH}/tailscaled.sock:/var/run/tailscale/tailscaled.sock
    networks:
      wg-easy:
        ipv4_address: 10.8.1.5


    
    
  # openproject:
  #   image: openproject/openproject:16
  #   container_name: openproject
  #   restart: unless-stopped
  #   environment:
  #     OPENPROJECT_HOST__NAME: ${OPENPROJECT_HOST_NAME}
  #     OPENPROJECT_SECRET_KEY_BASE: ${OPENPROJECT_SECRET_KEY_BASE}
  #     OPENPROJECT_HTTPS: false
  #   volumes:
  #     - ${OPENPROJECT_PGDATA_PATH}:/var/openproject/pgdata
  #     - ${OPENPROJECT_ASSETS_PATH}:/var/openproject/assets
  #   dns:
  #     - 10.8.1.3
  #     - 1.1.1.1
  #     - 8.8.8.8
  #   networks:
  #     wg-easy:
  #       ipv4_address: 10.8.1.50


  web-test:
    image: traefik/whoami
    container_name: web-test
    restart: unless-stopped
    networks:
      wg-easy:
        ipv4_address: 10.8.1.49



# Booked 10.8.1.2 - 10.8.1.50

networks:
  wg-easy:
    driver: bridge
    ipam:
      config:
        - subnet: 10.8.1.0/24
